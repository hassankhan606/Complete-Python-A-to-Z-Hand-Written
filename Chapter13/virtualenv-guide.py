#* ========================================================
#* PYTHON VIRTUAL ENVIRONMENT: COMPLETE A TO Z GUIDE
#* ========================================================

#* This file does not execute like a normal script ‚Äî 
#* It‚Äôs a step-by-step instruction guide with commands explained.
#* Follow each step in your terminal or VS Code terminal.

#* -----------------------------
#* 1Ô∏è‚É£ CHECK PYTHON VERSION
#* -----------------------------
#* Open your terminal and run:
#^ python --version

#* Make sure you have Python 3.6+ installed.

#* -----------------------------
#* 2Ô∏è‚É£ CREATE PROJECT FOLDER
#* -----------------------------
#* In terminal:
#^ mkdir my_project
#^ cd my_project

#* -----------------------------
#* 3Ô∏è‚É£ CREATE VIRTUAL ENVIRONMENT
#* -----------------------------
#* Run:
#^ python -m venv my-env

#* This creates a folder named `my-env` with:
#* - Scripts (Windows) or bin (Linux/Mac)
#* - Python executable
#* - Local site-packages (installed libraries)

#* -----------------------------
#* 4Ô∏è‚É£ ACTIVATE VIRTUAL ENVIRONMENT
#* -----------------------------
#* Windows:
#^ my-env\Scripts\activate

#* Mac / Linux:
#^ source my-env/bin/activate

#* If successful, your terminal will show:
#^ (my-env) ‚ûú

#* -----------------------------
#* 5Ô∏è‚É£ INSTALL PACKAGES
#* -----------------------------
#* For example, install requests and flask:
#^ pip install requests flask

#* Verify installed packages:
#^ pip list

#* -----------------------------
#* 6Ô∏è‚É£ SAVE INSTALLED PACKAGES
#* -----------------------------
#* To share with others:
#^ pip freeze > requirements.txt

#* This file lists all packages + versions.

#* -----------------------------
#* 7Ô∏è‚É£ INSTALL FROM requirements.txt
#* -----------------------------
#* Anyone can recreate your environment:
#^ pip install -r requirements.txt

#* -----------------------------
#* 8Ô∏è‚É£ DEACTIVATE VIRTUAL ENVIRONMENT
#* -----------------------------
#* When done working:
#^ deactivate

#* This brings you back to your global Python.

#* -----------------------------
#* 9Ô∏è‚É£ DELETE A VIRTUAL ENVIRONMENT
#* -----------------------------
#* Just delete the folder:
#^ rm -rf my-env

#* -----------------------------
#* 1Ô∏è‚É£0Ô∏è‚É£ EXTRA: BEST PRACTICES
#* -----------------------------
#* #! Always use one virtual env per project.
#* #! Never push the `my-env` folder to Git.
#* #! Add it to .gitignore.
#* #! Always share requirements.txt.

#* -----------------------------
#* 1Ô∏è‚É£1Ô∏è‚É£ CHECK PYTHON PATH
#* -----------------------------
#* Confirm your venv is active:
#^ which python  # Mac/Linux
#^ where python  # Windows

#* It should show path inside your my-env folder.

#* -----------------------------
#* 1Ô∏è‚É£2Ô∏è‚É£ BONUS: VENV USING virtualenv
#* -----------------------------
#* Install virtualenv if needed:
#^ pip install virtualenv

#* Create:
#^ virtualenv my-env

#* Activate same as above.

#* -----------------------------
#* ‚úÖ YOU DID IT!
#* -----------------------------
#* You now know how to:
#* - Create
#* - Activate
#* - Install packages
#* - Freeze requirements
#* - Recreate environments
#* - Deactivate & clean up

#* -----------------------------
#* üìå END OF GUIDE
#* -----------------------------
